/*
// 2016-03-12: attr() is only supported to be used as string.
[data-grid-div][data-grid-width] {
	width: calc(100% * attr(data-grid-div integer, 1) / attr(data-grid-width integer, 1));
}
*/
$min-columns: 1;
$max-columns: 12;
.column-box {
	display: flex;
	@for $col-max from $min-columns through $max-columns {
		@for $col from 1 through $col-max {
			>[data-column-width="#{$col}"][data-column-div="#{$col-max}"] {
				width: calc(100% * #{$col} / #{$col-max});
				box-sizing: border-box;
				margin-right: 0;
				margin-left: 0;
			}
		}
	}
}

%col-basic {
	box-sizing: border-box;
	flex: 0 0 auto;
}

@function width-div($numer, $denom, $full: 100%) {
	@return unquote("calc(#{$full} * #{$numer} / #{$denom})");
}


.grid-row {
	box-sizing: border-box;
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
}

@mixin grid-classes-for-screen-size($size-name) {
	$prefix: col-#{$size-name};
	@for $i from 1 through ($grid-column-max - 1) {
		.#{$prefix}-#{$i} {
			flex-basis: width-div($i, $grid-column-max);
			max-width: width-div($i, $grid-column-max);
			margin-right: 0;
			margin-left: 0;
		}
		.#{$prefix}-offset-#{$i} {
			margin-left: width-div($i, $grid-column-max);
		}
	}
	.#{$prefix}-#{$grid-column-max} {
		flex-basis: 100%;
		max-width: 100%;
	}
	.#{$prefix} {
		flex-grow: 1;
		flex-basis: 0;
		max-width: 100%;
	}
	// Horizontal align
	@each $halign in start, end {
		.#{$prefix}-#{$halign} {
			justify-content: flex-#{$halign};
			text-align: #{$halign};
		}
	}
	.#{$prefix}-center {
		justify-content: center;
		text-align: center;
	}
	// Vertical align
	.#{$prefix}-top {
		align-items: flex-start;
	}
	.#{$prefix}-middle {
		align-items: center;
	}
	.#{$prefix}-bottom {
		align-items: flex-end;
	}
}

// xs or larger.
@include grid-classes-for-screen-size(xs);

// sm or larger.
@media screen and (min-width: $device-min-tablet) {
	$size-name: sm;
	@include grid-classes-for-screen-size($size-name);
}

// md or larger.
@media screen and (min-width: $device-min-pc-normal) {
	$size-name: md;
	@include grid-classes-for-screen-size($size-name);
}

// lg or larger.
@media screen and (min-width: $device-min-pc-large) {
	$size-name: lg;
	@include grid-classes-for-screen-size($size-name);
}
